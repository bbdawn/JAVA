 **4일차 주요 목차**
 @1 Review
 @2 Class Diagram의 relationship : aggregation, composition
 @3 Array(배열)
-----------------
@1 Review
#조건문 
	if else if else
	switch case
#반복문 (Loop)
	for
	while
	do while
#java keyword(예약어)
	break : 현재 실행에서 벗어나는 것
	this : 현재 실행중인 객체를 가리키는 것
	void : return값이 없을 때 쓰는 것

#UML (UnifiedModelingDiagram)
Class Diagram - 설계할 때 주로 사용
Usecase Diagram - 분석할 때 주로 사용
STARUML
OOAD(Object Oriented Analysis and Design)
	객체    지향      분석         설계

클래스명		ClassDiagram		*use a		association
Attribute	-(private) 			*has a		aggregation
Operation	+(public)			*consist of	composition


@2 UML (Class Diagram) [step 1,2,3,4]
 	Unified Modeling Language 통합 모델링 언어 -> 분석 설계시 사용하는 모델링 언어 
 Class Diagram의 Relationship			
 tool : staruml 을 설치함
 	
 Class Diagram 상에서 Relationship : use a, has a, consist of
 
 association : use a 예) 사람이 렌트카를 "사용"한다 
 
 aggregation : has a 예) 사람이 스마트폰을 "소유해서 사용"하다

 composition : consist of 예) 사람이 "뇌"를 가지고 있다 (스마트폰보다 더 긴밀한 관계)
 
 association > aggregation > composition (점차 긴밀한 관계) 
 
 @3 Array(배열)
 - Array(배열) : 다수의 데이터를 효과적으로 저장하고 관리하기 위한 객체
 1. Primitive_기본형 DataType의 데이터를 저장하는 배열
 	step1 : 배열 선언 int[]age; //int age []
 	step2 : 배열 생성 age=new int[3]; //3개 공간을 가진 배열 객체를 생성 3 --> length
 	step3 : 배열의 각 공간에 요소를 할당 age[0]=22; age[1]=26; age[2]=24;
 	
 	age.length -> 3이 반환
 	
 	배열의 선언, 생성, 할당을 동시에 int[]age={22,26,24};
 	
 2. Reference_참조형 DataType의 데이터를 저장하는 배열
 	step1 : 배열선언 Person[]pa;
 	step2 : 배열생성 pa=new Person[3]; //3개의 방을 가진 배열을 생성 length 3
 	step3 : 배열 요소 할당 	pa[0]=new Person("아이유",30);	
 						pa[1]=new Person("박보검",28);
 						
 	sysout(pa[0].getName()); --> 아이유	
 				

+) Primitive type
	기본타입 int,double 변수에 값이 들어가는 타입이다
	변수의 종류로는 byte,short,char,int,float,double,boolean
	기본 타입의 크기가 작고 고정적이다
	메모리의 stack에 저장이 된다
	
	reference type
	new 키워드를 이용하여 객체를 생성해서 데이터가 생성된 주소를 참조하는 타입
	참조 타입의 종류로는 class, array, interface
	참조타입의 데이터 크기가 가변적, 동적이기 때문에 동적으로 관리되는 HEAP영역에 저장
	String과 배열은 참조타입과 달리 new 없이 생성 가능하지만 기본타입이 아닌 참조타입이다
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	